apply plugin: 'com.android.library'
apply from: "publish.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 11
        versionName "1.3.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    // Global payments SDK
    implementation 'com.heartlandpaymentsystems:globalpayments-sdk:11.1.0'

    /** Vital SDK dependencies - Start **/
    //switch out commented code to change between local and hosted vital libs
    /*api project(path: ':vital-sdk:bbpos')
    api project(path: ':vital-sdk:core')
    api project(path: ':vital-sdk:ingenico')
    api project(path: ':vital-sdk:portico')
    api project(path: ':vital-sdk:roamreader')
    api project(path: ':vital-sdk:transaction-manager')*/
    api 'com.heartlandpaymentsystems:heartland-bbpos:1.0.4'
    api 'com.heartlandpaymentsystems:heartland-core:1.0.6'
    api 'com.heartlandpaymentsystems:heartland-ingenico:1.0.6'
    api 'com.heartlandpaymentsystems:heartland-portico:1.0.7'
    api 'com.heartlandpaymentsystems:heartland-roamreader:1.0.3'
    api 'com.heartlandpaymentsystems:heartland-transaction-manager:1.0.5'

    // Apache Commons
    //implementation 'commons-codec:commons-codec:1.13'

    // Dates & Times
    //implementation 'joda-time:joda-time:2.10'

    // Timber Logging: https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Google GSON
    api 'com.google.code.gson:gson:2.8.4'
   // implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    /** Vital SDK dependencies - End **/

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:core:1.3.0-rc01'
    androidTestImplementation 'androidx.test:runner:1.3.0-rc01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-rc01'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2-rc01'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly "org.projectlombok:lombok:1.18.12"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.12"
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
    options.addBooleanOption('-ignore-source-errors', true)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
